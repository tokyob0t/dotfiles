---@class naughty.notification: gears.object
---@field _private table
---@field text string Text of the notification
---@field get_text fun(self: naughty.notification): string
---@field set_text fun(self: naughty.notification, value: string)
---@field title string Title of the notification
---@field get_title fun(self: naughty.notification): string
---@field set_title fun(self: naughty.notification, value: string)
---@field timeout integer Time in seconds after which popup expires
---@field get_timeout fun(self: naughty.notification): integer
---@field set_timeout fun(self: naughty.notification, value: integer)
---@field hover_timeout number Delay in seconds after which hovered popup disappears
---@field get_hover_timeout fun(self: naughty.notification): number
---@field set_hover_timeout fun(self: naughty.notification, value: number)
---@field screen integer|screen Target screen for the notification
---@field get_screen fun(self: naughty.notification): integer|screen
---@field set_screen fun(self: naughty.notification, value: integer|screen)
---@field position string Corner of the workarea displaying the popups
---@field get_position fun(self: naughty.notification): string
---@field set_position fun(self: naughty.notification, value: string)
---@field ontop boolean Boolean forcing popups to display on top
---@field get_ontop fun(self: naughty.notification): boolean
---@field set_ontop fun(self: naughty.notification, value: boolean)
---@field height integer Popup height
---@field get_height fun(self: naughty.notification): integer
---@field set_height fun(self: naughty.notification, value: integer)
---@field width integer Popup width
---@field get_width fun(self: naughty.notification): integer
---@field set_width fun(self: naughty.notification, value: integer)
---@field font string|lgi.Pango.FontDescription Notification font
---@field get_font fun(self: naughty.notification): string|lgi.Pango.FontDescription
---@field set_font fun(self: naughty.notification, value: string|lgi.Pango.FontDescription)
---@field icon image Path to icon
---@field get_icon fun(self: naughty.notification): image
---@field set_icon fun(self: naughty.notification, value: image)
---@field icon_size integer Desired icon size in px
---@field get_icon_size fun(self: naughty.notification): integer
---@field set_icon_size fun(self: naughty.notification, value: integer)
---@field fg string Foreground color
---@field get_fg fun(self: naughty.notification): string
---@field set_fg fun(self: naughty.notification, value: string)
---@field bg string Background color
---@field get_bg fun(self: naughty.notification): string
---@field set_bg fun(self: naughty.notification, value: string)
---@field border_width integer Border width
---@field get_border_width fun(self: naughty.notification): integer
---@field set_border_width fun(self: naughty.notification, value: integer)
---@field border_color gears.color Border color
---@field get_border_color fun(self: naughty.notification): gears.color
---@field set_border_color fun(self: naughty.notification, value: gears.color)
---@field shape gears.shape Widget shape
---@field get_shape fun(self: naughty.notification): gears.shape
---@field set_shape fun(self: naughty.notification, value: gears.shape)
---@field opacity gears.opacity Widget opacity
---@field get_opacity fun(self: naughty.notification): gears.opacity
---@field set_opacity fun(self: naughty.notification, value: gears.opacity)
---@field margin gears.margin Widget margin
---@field get_margin fun(self: naughty.notification): gears.margin
---@field set_margin fun(self: naughty.notification, value: gears.margin)
---@field run fun(notification: naughty.notification) Function to run on left click
---@field get_run fun(self: naughty.notification): fun(notification: naughty.notification)
---@field set_run fun(self: naughty.notification, value: fun(notification: naughty.notification))
---@field destroy fun(notification: naughty.notification) Function to run when notification is destroyed
---@field get_destroy fun(self: naughty.notification): fun(notification: naughty.notification)
---@field set_destroy fun(self: naughty.notification, value: fun(notification: naughty.notification))
---@field preset table Table with any of the above parameters
---@field get_preset fun(self: naughty.notification): table
---@field set_preset fun(self: naughty.notification, value: table)
---@field callback fun(args: table): boolean Function that will be called with all arguments
---@field get_callback fun(self: naughty.notification): fun(args: table): boolean
---@field set_callback fun(self: naughty.notification, value: fun(args: table): boolean)
---@field actions table A list of `naughty.action`s
---@field get_actions fun(self: naughty.notification): table
---@field set_actions fun(self: naughty.notification, value: table)
---@field ignore_suspend boolean If set to true this notification will be shown even if notifications are suspended
---@field get_ignore_suspend fun(self: naughty.notification): boolean
---@field set_ignore_suspend fun(self: naughty.notification, value: boolean)
